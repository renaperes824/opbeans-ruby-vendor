version: "2.1"
services:
  opbeans-ruby:
    build: .
    image: opbeans/opbeans-ruby:latest
    ports:
      - "127.0.0.1:${OPBEANS_SERVER_PORT:-8000}:3000"
    container_name: opbeans-ruby
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    environment:
      - ELASTIC_APM_SERVICE_NAME=${ELASTIC_APM_SERVICE_NAME:-opbeans-ruby}
      - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL:-http://apm-server:8200}
      - ELASTIC_APM_JS_SERVER_URL=${ELASTIC_APM_JS_SERVER_URL:-http://localhost:8200}
      - ELASTIC_APM_JS_SERVICE_NAME=${ELASTIC_APM_JS_SERVICE_NAME:-opbeans-react}
      - RAILS_ENV=production
      - ELASTIC_APM_ENVIRONMENT=production
      - DATABASE_URL=postgres://postgres:hunter2@postgres/opbeans
      - REDIS_URL=redis://redis:6379
      - RAILS_LOG_TO_STDOUT=1 
      - PORT=3000
    depends_on:
      apm-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--server-response", "-O", "/dev/null", "http://opbeans-ruby:3000/"]
      interval: 10s
      retries: 10
      
  apm-server:
    image: docker.elastic.co/apm/apm-server:${STACK_VERSION:-7.3.0}
    ports:
      - "127.0.0.1:${APM_SERVER_PORT:-8200}:8200"
      - "127.0.0.1:${APM_SERVER_MONITOR_PORT:-6060}:6060"
    command: >
      apm-server -e
        -E apm-server.frontend.enabled=true
        -E apm-server.frontend.rate_limit=100000
        -E apm-server.host=0.0.0.0:8200
        -E apm-server.read_timeout=1m
        -E apm-server.shutdown_timeout=2m
        -E apm-server.write_timeout=1m
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E xpack.monitoring.elasticsearch=true
        -E cloud.id=${ELASTIC_CLOUD_ID}
        -E cloud.auth=${ELASTIC_CLOUD_CREDENTIALS}
        -E output.elasticsearch.enabled=${APM_SERVER_ELASTICSEARCH_OUTPUT_ENABLED:-true}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/"]
      retries: 10
      interval: 10s

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=hunter2
      - POSTGRES_DB=opbeans
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      retries: 10
      interval: 10s

  redis:
    command: --save ''
    healthcheck:
      interval: 10s
      test: ["CMD", "redis-cli", "ping"]
    image: redis:4
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    ports: 
      - "6379:6379"
      
  wait:
    image: busybox
    depends_on:
      opbeans-ruby:
        condition: service_healthy

volumes:
  pgdata:
    driver: local
